snippet import
	import ${0:package.Class};

snippet if
	if (${1:condition}) {
		${0:${VISUAL}}
	}
snippet elif
	else if (${1:condition}) {
		${0:${VISUAL}}
	}
snippet else
	else {
		${0:${VISUAL}}
	}

snippet for
	for (int ${1:index} = 0; ${1} < ${2:less_than}; ${1}++) {
		${0:${VISUAL}}
	}
snippet oldforeach
	int length${1:items} = ${1:items}.length;
	for (int i = 0; i < length${1:items}; i++) {
		${2:type} ${3:item} = ${1:items}[i];
		${0:${VISUAL}}
	}
snippet foreach
	for (${1:type} ${2:item} : ${3:items}) {
		${0:${VISUAL}}
	}
snippet while
	while (${1:condition}) {
		${0:${VISUAL}}
	}
snippet do
	do {
		${0:${VISUAL}}
	} while (${1:condition});

snippet class
	public class ${1:ClassName} {
		${0:${VISUAL}}
	}
snippet method
	${1:public} ${2:void} ${3:methodName}(final ${4:String} ${5:arguments}) {
		${0:${VISUAL}}
	}
snippet get
	public ${1:String} get${2:Property}() {
		return ${0};
	}
snippet set
	public void set${1:Property}(final ${2:String} new${1:Property}) {
		${0:${VISUAL}}
	}
snippet constructor
	public `Filename()`(final ${4:String} ${5:arguments}) {
		${0:${VISUAL}}
	}
snippet staticmethod
	${1:public} static ${2:void} ${3:methodName}(final ${4:String} ${5:arguments}) {
		${0:${VISUAL}}
	}
